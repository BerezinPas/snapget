name: Smart Deploy
on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Устанавливаем только Node.js (PHP не требуется)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18 # Используем LTS-версию для стабильности

      # Кэшируем зависимости для ускорения
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      # Устанавливаем зависимости (пропускаем предупреждения)
      - name: Install dependencies
        run: |
          npm ci --no-audit --ignore-scripts
          npm fund --no-audit

      # Определяем изменения в ресурсах
      - name: Check for asset changes
        id: check-assets
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD -- assets/ Components/)
          if [ -n "$changed_files" ]; then
            echo "needs_build=true" >> $GITHUB_OUTPUT
            echo "Changed files detected:"
            echo "$changed_files"
          fi

      # Альтернативная сборка без phpcs
      - name: Build assets
        if: steps.check-assets.outputs.needs_build == 'true'
        run: |
          npx gulp build --production  # Используем напрямую gulp
          echo "Build contents:"
          ls -la dist/

      # Деплой через FTP (только измененные файлы + dist)
      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: 188.225.23.151
          username: snapget
          password: OO!VeL9j$6hq
          local-dir: ./
          server-dir: /test.snapget.ru/public_html/blog/wp-content/themes/flynt/
          exclude: |
            .git/
            node_modules/
            vendor/
            *.log
            .github/
          dangerous-clean-slate: false
